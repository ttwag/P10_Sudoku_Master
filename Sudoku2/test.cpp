#include <iostream>
#include "SudokuSolver.h"
#include "test.h"

/*
    Validate the input 9x9 sudoku board with the solution board
    Return true if both are the same, otherwise, return false.
*/ 
bool validate_board(std::vector<std::vector<int>>& board, std::vector<std::vector<int>>& board_sol) {
    for (int i = 0; i < 9; i++) {
        for (int j = 0; j < 9; j++) {
            if (board[i][j] != board_sol[i][j]) {
                return false;
            }
        }
    }
    return true;
}
/*
    n is the nth test, and 
*/
void print_message(int n, bool result) {
    if (result) {
        std::cout<<"Test "<<n<<" Passed"<<std::endl;
    }
    else {
        std::cout<<"Test "<<n<<" Failed"<<std::endl;
    }
    return;
}

/*
 * test() contains 5 test cases. It calls validate_board to validate the board then print the result with print_message
 * The function assumed valid sudoku input.
 * Test cases come from: https://mathsphere.co.uk/downloads/sudoku/10203-hard.pdf
 */
void test() {
    // test 1
    std::vector<std::vector<int>> board1 = {
            {0, 0, 0, 0, 0, 0, 0, 0, 2},
            {0, 0, 0, 0, 0, 0, 9, 4, 0},
            {0, 0, 3, 0, 0, 0, 0, 0, 5},
            {0, 9, 2, 3, 0, 5, 0, 7, 4},
            {8, 4, 0, 0, 0, 0, 0, 0, 0},
            {0, 6, 7, 0, 9, 8, 0, 0, 0},
            {0, 0, 0, 7, 0, 6, 0, 0, 0},
            {0, 0, 0, 9, 0, 0, 0, 2, 0},
            {4, 0, 8, 5, 0, 0, 3, 6, 0}
    };
    std::vector<std::vector<int>> board1_sol = {
            {6, 8, 4, 1, 5, 9, 7, 3, 2},
            {7, 5, 1, 8, 3, 2, 9, 4, 6},
            {9, 2, 3, 6, 7, 4, 1, 8, 5},
            {1, 9, 2, 3, 6, 5, 8, 7, 4},
            {8, 4, 5, 2, 1, 7, 6, 9, 3},
            {3, 6, 7, 4, 9, 8, 2, 5, 1},
            {2, 3, 9, 7, 4, 6, 5, 1, 8},
            {5, 1, 6, 9, 8, 3, 4, 2, 7},
            {4, 7, 8, 5, 2, 1, 3, 6, 9}
    };
    solveSudoku9(board1);
    print_message(1, validate_board(board1, board1_sol));

    // test 2
    std::vector<std::vector<int>> board2 = {
            {4, 0, 6, 0, 0, 0, 0, 5, 9},
            {0, 0, 0, 0, 4, 0, 2, 0, 0},
            {0, 7, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 5, 9, 1, 0, 0, 6, 0},
            {0, 1, 3, 0, 0, 0, 8, 9, 4},
            {0, 0, 0, 2, 0, 0, 0, 0, 1},
            {5, 0, 8, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 3, 0, 0, 0, 8},
            {0, 4, 0, 0, 6, 0, 1, 0, 0}
    };

    std::vector<std::vector<int>> board2_sol = {
            {4, 3, 6, 1, 2, 8, 7, 5, 9},
            {9, 5, 1, 7, 4, 6, 2, 8, 3},
            {8, 7, 2, 3, 5, 9, 4, 1, 6},
            {7, 8, 5, 9, 1, 4, 3, 6, 2},
            {2, 1, 3, 6, 7, 5, 8, 9, 4},
            {6, 9, 4, 2, 8, 3, 5, 7, 1},
            {5, 2, 8, 4, 9, 1, 6, 3, 7},
            {1, 6, 7, 5, 3, 2, 9, 4, 8},
            {3, 4, 9, 8, 6, 7, 1, 2, 5}
    };
    solveSudoku9(board2);
    print_message(2, validate_board(board2, board2_sol));


    // test 3
    std::vector<std::vector<int>> board3 = {
            {0, 0, 0, 0, 0, 8, 0, 9, 0},
            {0, 0, 3, 0, 0, 1, 0, 0, 0},
            {2, 0, 0, 0, 0, 7, 6, 0, 0},
            {0, 0, 0, 0, 2, 0, 0, 0, 0},
            {0, 9, 4, 0, 8, 0, 2, 0, 0},
            {7, 1, 0, 0, 4, 0, 9, 0, 5},
            {1, 0, 0, 9, 0, 0, 5, 3, 0},
            {5, 7, 0, 0, 0, 0, 8, 4, 0},
            {0, 0, 0, 0, 0, 6, 0, 2, 1}
    };
    std::vector<std::vector<int>> board3_sol = {
            {6, 4, 7, 5, 3, 8, 1, 9, 2},
            {9, 5, 3, 2, 6, 1, 4, 7, 8},
            {2, 8, 1, 4, 9, 7, 6, 5, 3},
            {8, 6, 5, 7, 2, 9, 3, 1, 4},
            {3, 9, 4, 1, 8, 5, 2, 6, 7},
            {7, 1, 2, 6, 4, 3, 9, 8, 5},
            {1, 2, 8, 9, 7, 4, 5, 3, 6},
            {5, 7, 6, 3, 1, 2, 8, 4, 9},
            {4, 3, 9, 8, 5, 6, 7, 2, 1}
    };
    solveSudoku9(board3);
    print_message(3, validate_board(board3, board3_sol));


    // test 4
    std::vector<std::vector<int>> board4 = {
            {0, 7, 0, 0, 1, 0, 0, 2, 0},
            {5, 0, 0, 0, 2, 7, 0, 0, 1},
            {0, 0, 2, 5, 0, 8, 0, 0, 4},
            {0, 0, 0, 9, 0, 0, 0, 0, 0},
            {8, 6, 0, 1, 0, 0, 9, 5, 3},
            {0, 0, 0, 3, 0, 0, 1, 0, 0},
            {3, 0, 0, 0, 0, 0, 0, 0, 9},
            {0, 2, 0, 7, 5, 0, 0, 0, 0},
            {0, 0, 0, 2, 3, 0, 4, 8, 0}
    };
    std::vector<std::vector<int>> board4_sol = {
            {9, 7, 4, 6, 1, 3, 5, 2, 8},
            {5, 8, 3, 4, 2, 7, 6, 9, 1},
            {6, 1, 2, 5, 9, 8, 7, 3, 4},
            {1, 3, 5, 9, 7, 6, 8, 4, 2},
            {8, 6, 7, 1, 4, 2, 9, 5, 3},
            {2, 4, 9, 3, 8, 5, 1, 6, 7},
            {3, 5, 1, 8, 6, 4, 2, 7, 9},
            {4, 2, 8, 7, 5, 9, 3, 1, 6},
            {7, 9, 6, 2, 3, 1, 4, 8, 5}
    };
    solveSudoku9(board4);
    print_message(4, validate_board(board4, board4_sol));

    // test 5
    std::vector<std::vector<int>> board5 = {
            {2, 7, 0, 0, 0, 0, 0, 9, 3},
            {0, 0, 6, 0, 3, 9, 0, 0, 0},
            {3, 0, 0, 0, 0, 0, 1, 5, 0},
            {0, 3, 0, 2, 0, 4, 0, 0, 7},
            {9, 2, 5, 0, 0, 0, 4, 0, 8},
            {4, 0, 0, 6, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 7, 5},
            {5, 0, 0, 0, 0, 8, 0, 0, 1},
            {0, 0, 4, 0, 0, 3, 9, 0, 0}
    };
    std::vector<std::vector<int>> board5_sol = {
            {2, 7, 1, 4, 5, 6, 8, 9, 3},
            {8, 5, 6, 1, 3, 9, 7, 2, 4},
            {3, 4, 9, 8, 2, 7, 1, 5, 6},
            {6, 3, 8, 2, 9, 4, 5, 1, 7},
            {9, 2, 5, 3, 7, 1, 4, 6, 8},
            {4, 1, 7, 6, 8, 5, 2, 3, 9},
            {1, 8, 3, 9, 4, 2, 6, 7, 5},
            {5, 9, 2, 7, 6, 8, 3, 4, 1},
            {7, 6, 4, 5, 1, 3, 9, 8, 2}
    };
    solveSudoku9(board5);
    print_message(5, validate_board(board5, board5_sol));

    // test 6
    std::vector<std::vector<int>> board6 = {
            {8, 4, 0, 0, 0, 0, 7, 0, 1},
            {0, 0, 0, 0, 8, 0, 0, 5, 0},
            {0, 0, 6, 0, 0, 0, 0, 0, 4},
            {0, 7, 0, 1, 3, 0, 4, 0, 0},
            {0, 2, 3, 0, 0, 0, 1, 9, 8},
            {0, 0, 0, 5, 0, 0, 0, 0, 3},
            {7, 9, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 2, 0, 0, 0, 9},
            {0, 0, 8, 0, 4, 0, 0, 3, 0}
    };
    std::vector<std::vector<int>> board6_sol = {
            {8, 4, 2, 3, 5, 9, 7, 6, 1},
            {1, 3, 7, 6, 8, 4, 9, 5, 2},
            {9, 5, 6, 2, 7, 1, 3, 8, 4},
            {6, 7, 9, 1, 3, 8, 4, 2, 5},
            {5, 2, 3, 4, 6, 7, 1, 9, 8},
            {4, 8, 1, 5, 9, 2, 6, 7, 3},
            {7, 9, 5, 8, 1, 3, 2, 4, 6},
            {3, 6, 4, 7, 2, 5, 8, 1, 9},
            {2, 1, 8, 9, 4, 6, 5, 3, 7}
    };
    solveSudoku9(board6);
    print_message(6, validate_board(board6, board6_sol));

    // test 7
    std::vector<std::vector<int>> board7 = {
            {0, 0, 5, 0, 0, 3, 0, 0, 0},
            {1, 0, 4, 0, 0, 0, 0, 0, 0},
            {8, 3, 0, 0, 1, 0, 0, 0, 7},
            {0, 5, 7, 0, 3, 0, 9, 4, 6},
            {9, 1, 0, 4, 0, 0, 0, 3, 8},
            {0, 4, 0, 0, 7, 9, 0, 2, 0},
            {6, 0, 0, 0, 0, 7, 5, 0, 0},
            {4, 9, 0, 8, 0, 0, 6, 0, 0},
            {0, 0, 0, 0, 6, 0, 0, 1, 0}
    };
    std::vector<std::vector<int>> board7_sol = {
            {7, 6, 5, 2, 9, 3, 4, 8, 1},
            {1, 2, 4, 7, 8, 6, 3, 5, 9},
            {8, 3, 9, 5, 1, 4, 2, 6, 7},
            {2, 5, 7, 1, 3, 8, 9, 4, 6},
            {9, 1, 6, 4, 2, 5, 7, 3, 8},
            {3, 4, 8, 6, 7, 9, 1, 2, 5},
            {6, 8, 1, 3, 4, 7, 5, 9, 2},
            {4, 9, 2, 8, 5, 1, 6, 7, 3},
            {5, 7, 3, 9, 6, 2, 8, 1, 4}
    };
    solveSudoku9(board7);
    print_message(7, validate_board(board7, board7_sol));

    // test 8
    // Note: this test case has multiple solutions
    std::vector<std::vector<int>> board8 = {
            {0, 0, 0, 5, 3, 4, 0, 8, 0},
            {0, 8, 0, 0, 1, 0, 4, 0, 0},
            {0, 2, 0, 8, 0, 0, 0, 7, 1},
            {8, 0, 0, 0, 6, 0, 0, 5, 0},
            {4, 0, 0, 0, 0, 5, 8, 3, 0},
            {6, 3, 0, 1, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 1, 3, 0, 0},
            {0, 0, 0, 0, 7, 0, 0, 0, 0},
            {0, 1, 6, 2, 0, 0, 0, 0, 0}
    };
    std::vector<std::vector<int>> board8_sol = {
            {1, 6, 7, 5, 3, 4, 2, 8, 9},
            {5, 8, 9, 7, 1, 2, 4, 6, 3},
            {3, 2, 4, 8, 9, 6, 5, 7, 1},
            {8, 9, 2, 3, 6, 7, 1, 5, 4},
            {4, 7, 1, 9, 2, 5, 8, 3, 6},
            {6, 3, 5, 1, 4, 8, 7, 9, 2},
            {9, 4, 8, 6, 5, 1, 3, 2, 7},
            {2, 5, 3, 4, 7, 9, 6, 1, 8},
            {7, 1, 6, 2, 8, 3, 9, 4, 5}
    };
    solveSudoku9(board8);
    print_message(8, validate_board(board8, board8_sol));

    // test 9
    std::vector<std::vector<int>> board9 = {
            {7, 0, 0, 0, 0, 5, 0, 9, 0},
            {0, 4, 0, 0, 8, 0, 0, 0, 0},
            {0, 2, 0, 4, 0, 1, 5, 3, 6},
            {4, 0, 7, 0, 0, 0, 0, 5, 0},
            {0, 0, 0, 8, 5, 0, 0, 0, 0},
            {0, 0, 0, 1, 0, 0, 4, 0, 3},
            {0, 0, 0, 0, 9, 0, 0, 8, 0},
            {9, 0, 0, 0, 0, 6, 0, 0, 7},
            {0, 0, 0, 0, 0, 0, 0, 2, 5}
    };
    std::vector<std::vector<int>> board9_sol = {
            {7, 3, 1, 2, 6, 5, 8, 9, 4},
            {6, 4, 5, 9, 8, 3, 1, 7, 2},
            {8, 2, 9, 4, 7, 1, 5, 3, 6},
            {4, 1, 7, 6, 3, 9, 2, 5, 8},
            {2, 6, 3, 8, 5, 4, 7, 1, 9},
            {5, 9, 8, 1, 2, 7, 4, 6, 3},
            {3, 5, 4, 7, 9, 2, 6, 8, 1},
            {9, 8, 2, 5, 1, 6, 3, 4, 7},
            {1, 7, 6, 3, 4, 8, 9, 2, 5}
    };
    solveSudoku9(board9);
    print_message(9, validate_board(board9, board9_sol));

    // test 10
    std::vector<std::vector<int>> board10 = {
            {0, 0, 3, 0, 0, 7, 0, 6, 0},
            {0, 0, 7, 8, 0, 0, 2, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 3, 0},
            {0, 0, 0, 0, 5, 0, 0, 0, 1},
            {0, 0, 5, 4, 0, 8, 3, 7, 9},
            {0, 3, 0, 2, 7, 9, 6, 4, 0},
            {5, 0, 0, 0, 0, 0, 0, 0, 3},
            {0, 7, 6, 3, 9, 4, 0, 0, 0},
            {0, 0, 4, 0, 0, 5, 0, 8, 0}
    };
    std::vector<std::vector<int>> board10_sol = {
            {2, 5, 3, 9, 4, 7, 1, 6, 8},
            {9, 6, 7, 8, 3, 1, 2, 5, 4},
            {4, 8, 1, 5, 6, 2, 9, 3, 7},
            {7, 4, 9, 6, 5, 3, 8, 2, 1},
            {6, 2, 5, 4, 1, 8, 3, 7, 9},
            {1, 3, 8, 2, 7, 9, 6, 4, 5},
            {5, 1, 2, 7, 8, 6, 4, 9, 3},
            {8, 7, 6, 3, 9, 4, 5, 1, 2},
            {3, 9, 4, 1, 2, 5, 7, 8, 6}
    };
    solveSudoku9(board10);
    print_message(10, validate_board(board10, board10_sol));
    return;
}

